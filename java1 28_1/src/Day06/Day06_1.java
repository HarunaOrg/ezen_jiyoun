package Day06;

public class Day06_1 {

	// 클래스
		// 1.클래스 : 설계도
		// 2.객체(인스턴스) : 설계도를 기반으로 메모리를 할당 받은 변수
			// 예) 붕어빵 틀 = 클래스
				// 밀가루, 물, 팥, 슈크림 = 속성 or 필드 (어떠한 상태. 어떤 색, 뭐가 들어갔고 무슨 모양이고 등등)
				// 굽기, 뒤집기, 판매 = 메소드 (어떠한 행동)
				// 붕어빵 틀로부터 여러개 붕어빵이 생성
					// 서로 다른 붕어빵 생성 [ 붕어빵1, 붕어빵2, 붕어빵3 ...]
			//예) 회원 = 클래스(회원가입을 만들때 회원 자체를 클래스로 설정한다.)
			// 아이디, 비밀번호, 이름, 생년월일, 성별, 이메일, 전화번호 = 필드[속성]
			// 회원가입, 아이디/비밀번호 찾기, 회원 탈퇴, 로그인 = 메소드[행동]
				// 서로 다른 회원 생선 [ 회원1, 회원2, 회원3 ...]
	
	public static void main(String[] args) {
		
		//예1) p.195
		// student를 사용하려고 하니 오류. 이것은 설계도가 없으면 선언이 불가능하다.
		// scan은 오라클이 jdk로 만들어놓은 설계도가 있다. 라이브러리가 없으면 실행도 안 된다.
		// class 이름을 student로 해서 만들고 옆으로 놓는다. 그러면 설계도가 생기고 여기는 메인이 된다.
		// main은 설계가 아니라 프로그램을 돌리기 위한 메소드
		
		Student s1 = new Student(); //day06에 있는 클래스. 객체명은 소문자(추천)
		// 1. Student : 정의된 클래스명
		// 2. Student : 변수명, 객체명 [아무거나] *추천은 class 이름을 소문자로 적는 것
		// 3. new 연산자 : 메모리(저장 공간) 생성
		// 4. Student() : 생성자명
		// 객체 생성 시 이렇게 4가지가 필요하다.
		System.out.println("s1 변수가 Student 객체를 참조합니다.");
		System.out.println(s1);
		
		Student s2 = new Student();
		System.out.println("s2 변수가 또 다른 Student 객체를 참조합니다.");
		System.out.println(s2);
		
		
		
		
		//////////////////////////////////////////////////////////////////////
	} // me

} // c e
