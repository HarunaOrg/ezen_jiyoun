package Day04;

import java.util.Random;
import java.util.Scanner;

public class Day4_6 {
	public static void main(String[] args) {
	
		// 삼목 게임
			// 1. 9칸 생성 : String[] 배열 = new String[9]
			// 2. 사용자에게 0~8 인덱스 번호 입력받기 : 해당 인덱스에 O 표시
			// 3. 컴퓨터는 0~8 사이 난수 발생 : 해당 인덱스에 X 표시
			// * 이미 둔 자리는 입력 불가능(2-3 둘다) 재입력.
			// 4. 승리판단 : 가로,세로,대각선 인덱스들의 모양이 모두 동일
				// 가로 : 012 345 678 . 세로 : 036 147 258 . 대각선 048 246
		
		Scanner scanner = new Scanner(System.in); // 입력객체
		// o,x를 저장할 변수를 string(문자 저장 가능)으로 한다. 
		String[] 게임판 = { "[ ]" , "[ ]" , "[ ]" ,
				 		  "[ ]" , "[ ]" , "[ ]" ,
				 		  "[ ]" , "[ ]" , "[ ]" };	
		// new String[9]; //string 객체 9개를 저장할 수 있는 배열 선언
		String 승리알 = ""; //3목이 되었을 때 해당 알을 저장하는 변수

		
		//무한루프로 게임 출력
		while(true) { //변수로 한다면 i<게임판.length로 넣는다.
			// 무한루프 종료 조건 : 9칸 모두 알이 있거나 승리자가 나왔을 경우.
			
			for(int i = 0 ; i<9 ; i++ ) {
				System.out.print(게임판[i]);
				//3의 배수마다 내려오게 만드는 코드
				// 배수찾기 : 값 % 수 == 0
				
				// 인덱스가 2 5 8이면 줄바꿈 처리
				if( i % 3 == 2) { //i를 3으로 나눴을 때 나머지가 2일때
				System.out.println(); }} //줄바꿈을 한다.				
		
		// -------------------칸 만들기 종료
		
		// 1. 플레이어 위치(인덱스) 선택
			while(true) {
		System.out.print("위치 선택 : "); int 위치 = scanner.nextInt();
		if(게임판[위치].equals("[ ]")) {
			//선택한 위치가 공백이면 알 두기
			//string은 "자바"=="자바"안되므로 .equals로 대체( "자바".equals("자바")
			게임판[위치] = "[O]"; 
			 break; //가장 가까운 반복문 탈출
			}else {	System.out.println("이미 알이 있습니다. 다시 입력해주세요 "); }		
			}//we2
		
			
		//----------플레이어 종료
			
			//컴퓨터는 난수로 진행 0~8 사이
			
			while(true) {
				Random random = new Random(); //난수 객체 선언
				int 위치 = random.nextInt(9); //0~8사이 난수 발생(int형으로 가져오기)
				if(게임판[위치].equals("[ ]")) { // 해당 난수위치가 공백이면 x알 두기
					게임판[위치] = "[X]";} break; }
				// 난수가 공백위치를 생성했을 경우에 break;
		
		//------------- 승리판단
			//1.가로로 이김 012 345 678 - 3씩 증가
			//2.세로로 이김 036 147 258 - 1씩 증가. 두번째값은 첫번째+3
			//3.대각선으로 이김 048 246 -2씩 증가
			
			//가로
			for(int i=0 ; i<6 ; i+=3 ) {
				//i는 0부터 6까지 3씩 증가 -> 0 3 6 -> 3회
				if(게임판[i].equals(게임판[i+1]) && 게임판[i+1].equals(게임판[i+2]));
				{ //0인덱스 == 1인덱스 이면서 1인덱스 == 2인덱스 //?????????????????????
					승리알 = 게임판[i]; //동일한 알을 승리알 변수에 대입			
				}	}
			
			//세로
			for(int i=0 ; i<=2 ; i++){ //i는 0부터 2까지 1씩 총 3회 증가
				if(게임판[i].equals(게임판[i+3]) && 게임판[i+3].equals(게임판[i+6])) {
				승리알 = 게임판[i];	
				}
				
			}
			
			//대각선
			if(게임판[0].equals(게임판[4])&& 게임판[4].equals(게임판[8])) {
				승리알 = 게임판[0];
				//대각선으로 이기는 경우의 수
			} if(게임판[2].equals(게임판[4])&& 게임판[4].equals(게임판[6])) {
				승리알 = 게임판[2];	} //게임종료
			
			//승리 종료
			if(승리알.equals("[O]")) {System.out.println("플레이어가 승리하였습니다."); break; }
			if(승리알.equals("[X]")) {System.out.println("컴퓨터가 승리하였습니다."); break; }

			
			//무승부
			
			
		}//we [게임종료]
		//게임 종료 후 게임판을 한번 더 출력
			for(int i = 0 ; i<9 ; i++ ) {	System.out.print(게임판[i]);
				if( i % 3 == 2) { 	System.out.println(); }} 				
		
	
		
		// -------------------------------------------------------------------
		
		
		//무승부 판단 코드 만들어보기
			// 공백이 없으면 끝나게 해보기...
		
		
	}//me
} // ce
